CODELET:	gemm1
inputs=data['M', 'N'], weight['N', 'P'], bias['P']
outputs=out['M', 'P']
0	config0: start-systolic_array
1	config1: start-WBUF
2	config2: start-IBUF
3	config3: start-BBUF
4	config4: start-OBUF
5	loop0[0]: START=0; STOP=1024; STRIDE=64; OFFSET:0
6		transfer2: OPERAND: bias[DRAM->BBUF], SIZES: [[1024], [64]]
7		loop1[1]: START=0; STOP=512; STRIDE=256; OFFSET:0
8			transfer1: OPERAND: weight[DRAM->WBUF], SIZES: [[512, 1024], [256, 64]]
9			loop2[2]: START=0; STOP=64; STRIDE=8; OFFSET:0
10				transfer3: OPERAND: out[DRAM->OBUF], SIZES: [[64, 1024], [8, 64]]
11				transfer0: OPERAND: data[DRAM->IBUF], SIZES: [[64, 512], [8, 256]]
12				loop3[3]: START=0; STOP=64; STRIDE=1; OFFSET:0
13					loop4[4]: START=0; STOP=256; STRIDE=1; OFFSET:0
14						loop5[5]: START=0; STOP=8; STRIDE=1; OFFSET:0
15							compute0: pe_array-MVMUL(['data', 'weight', 'bias'])->['out']
16				transfer4: OPERAND: out[OBUF->DRAM], SIZES: [[64, 1024], [8, 64]]
17	config5: end-WBUF
18	config6: end-IBUF
19	config7: end-OBUF
20	config8: end-BBUF
21	config9: end-systolic_array
